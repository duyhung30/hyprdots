(defwidget notifButton []
  (revealer
    :reveal {notifications.count > 0}
    :transition "slideleft"
    
    (eventbox
      :onclick "${EWW_CMD} open notifDashboard --toggle &"
      :cursor "pointer"
      (box
        :class "notifButton"
        (label
          :text "󱅫"
          :class "icon"
          :halign "center"
        )
        
      )
    )
  )
)

(defwindow notifDashboard
  :monitor 0
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore true
  :geometry (geometry
    :x "0.5%"
    :y "1%"
    :width "20%"
    :anchor "top right"
  )
  
  (eventbox
    :onhoverlost "eww close notifDashboard &"
    (box
      :class "dashboard notifHistoryBox"
      (notifHistory)
    )
  )
)



; ; And now we create another widget only for the history of the notifications

(defwidget notifHistory []
  
  (box
    :orientation "v"
    :space-evenly false
    (box
      :class "notifmenuTopBox"
      :space-evenly false
      
      (label
        :hexpand true
        :halign "start"
        :class "notifTitle"
        :text "Notifications"
      )
      (box
        :space-evenly false
        :spacing 5
        (eventbox
          :cursor "pointer"
          (checkbox
            :halign "start"
            :class "checkbox ${notifications.dnd ? 'active_checkbox': 'inactive_checkbox' }"
            :onchecked "./scripts/notifManage --toggle"
            :onunchecked "./scripts/notifManage --toggle"
            
            (label
              :class "icon"
              :text {notifications.dnd ? "󰂛" : "󰂚"}
            )
          )
        )
        (revealer
          :reveal {notifications.count > 0}
          :transition "slideleft"
          
          (button
            :halign "end"
            :onclick "./scripts/notifManage --clear"
            :class "clearEventbox"
            :cursor "pointer"
            
            (label :text "Clear All")
          )
        )
      )
    )
    
    (scroll
      :vscroll true
      :vexpand true
      :height 500
      
      (box
        :space-evenly false
        :class "notifmenuBox"
        :space-evenly false
        :spacing 15
        :orientation "v"
        :hexpand true
        
        (for notif in {notifications.notifications}
          (notifpopup
            :id {notif.id}
            :source {notif.app}
            :title {notif.summary}
            :content {notif.body}
            :imgPath {notif.image}
            :time {notif.time}
            :onClose "zsh ./scripts/notifManage close ${notif.id}"
          )
        )
        (box
          :visible {notifications.count < 0}
          :orientation "v"
          :space-evenly false
          :vexpand true
          :valign "center"
          
          (label
            :class "icon zeronotifIcon"
            :text ""
          )
          
          (label
            :class "zeronotifLabel"
            :text "No Notifications"
            :halign true
          )
        )
      )
    ))
)
